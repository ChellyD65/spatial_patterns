{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"show",
				"show_sum"
			],
			[
				"two",
				"two_dim_input_tuning"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"field",
				"fields_per_synapse"
			],
			[
				"fie",
				"fields_per_synapse_exc"
			],
			[
				"fiel",
				"fields_per_synapse_inh"
			],
			[
				"po",
				"positive_diff"
			],
			[
				"r",
				"r_inh"
			],
			[
				"re",
				"r_exc"
			],
			[
				"vonmi",
				"von_mises_height_one"
			],
			[
				"kapp",
				"kappa_inh"
			],
			[
				"random",
				"random_sample"
			],
			[
				"discre",
				"discretize_space"
			],
			[
				"numb",
				"number_per_dimension"
			],
			[
				"disct",
				"discrete_positions_grid"
			],
			[
				"inpu",
				"input_space_resolution"
			],
			[
				"n_",
				"n_y"
			],
			[
				"possi",
				"possible_positions_grid"
			],
			[
				"pso",
				"positions_grid"
			],
			[
				"posi",
				"positions_grid"
			],
			[
				"posti",
				"positions_grid"
			],
			[
				"pos",
				"positions_grid"
			],
			[
				"posit",
				"positions"
			],
			[
				"positions",
				"positions_grid"
			],
			[
				"pi",
				"pi_over_r"
			],
			[
				"colo",
				"color_norm"
			],
			[
				"si",
				"sigma_exc"
			],
			[
				"sigma",
				"sigma_inh"
			],
			[
				"sigm",
				"sigma_inh"
			],
			[
				"par",
				"parameter_name"
			],
			[
				"vaire",
				"varied_parameter_array"
			],
			[
				"varie",
				"varied_parameter"
			],
			[
				"initial",
				"initial_x"
			],
			[
				"color",
				"color_cycle_blue3"
			],
			[
				"cell",
				"cell_type"
			],
			[
				"arrow",
				"arrowlength"
			],
			[
				"arro",
				"arrowopts"
			],
			[
				"aro",
				"arrowopts"
			],
			[
				"scal",
				"scaling_factor"
			],
			[
				"inh",
				"inhibitory_plasticity"
			],
			[
				"exc",
				"excitatory_plasticity"
			],
			[
				"legend",
				"legend_loc"
			],
			[
				"syn",
				"syn_type"
			],
			[
				"weights",
				"weights_vs_centers"
			],
			[
				"dimension",
				"dimensions"
			],
			[
				"out",
				"output_rate_grid_shape"
			],
			[
				"outpu",
				"output_rate_grid_shape"
			],
			[
				"every",
				"every_nth_step_weights"
			],
			[
				"every_nth",
				"every_nth_step_weights"
			],
			[
				"font",
				"fontsize"
			],
			[
				"xtick",
				"xticklabels"
			],
			[
				"target",
				"target_rate"
			],
			[
				"tar",
				"target_rate"
			],
			[
				"fir",
				"firing_rates"
			],
			[
				"tarte",
				"target_rate_distance"
			],
			[
				"ouput",
				"output_rate_distance"
			],
			[
				"general",
				"general_settings"
			],
			[
				"gener",
				"general_settings"
			],
			[
				"inhi",
				"Inhibitory"
			],
			[
				"veloc",
				"velocity_dt"
			],
			[
				"outb",
				"out_of_bounds_z"
			],
			[
				"move",
				"move_persistently_semi_periodic"
			],
			[
				"center",
				"center_overlap_exc"
			],
			[
				"initwei",
				"init_weight_exc"
			],
			[
				"lins",
				"linspaces"
			],
			[
				"pol",
				"populations"
			],
			[
				"possibl",
				"possible_positions"
			],
			[
				"get",
				"get_ParametersNamed"
			],
			[
				"poss",
				"possible_positions_grid"
			],
			[
				"number",
				"number_per_dimension_inh"
			],
			[
				"num",
				"number_per_dimension"
			],
			[
				"dist",
				"distortion"
			],
			[
				"Y",
				"Y"
			],
			[
				"nexc",
				"n_exc_y"
			],
			[
				"di",
				"diffusive"
			],
			[
				"nin",
				"n_inh_x"
			],
			[
				"plot",
				"plot_polar"
			],
			[
				"temp",
				"tempdir_new"
			],
			[
				"getlo",
				"getlogin"
			],
			[
				"scale",
				"scaled_kappa"
			],
			[
				"as",
				"asymmetric_gaussians"
			],
			[
				"init",
				"init_weight_inh"
			],
			[
				"weih",
				"weight_overlap"
			],
			[
				"poso",
				"position"
			],
			[
				"flatte",
				"flatten_params_to_point  (function)"
			],
			[
				"weighto",
				"weight_overlap"
			],
			[
				"sigmex",
				"sigma_exc"
			],
			[
				"Param",
				"ParametersNamed"
			],
			[
				"weighov",
				"weight_overlap"
			],
			[
				"Parame",
				"ParameterArray"
			],
			[
				"weightover",
				"weight_overlap_exc"
			],
			[
				"weightoverl",
				"weight_overlap_inh"
			],
			[
				"weig",
				"weight_overlap_exc"
			],
			[
				"wei",
				"weight_overlap_exc"
			],
			[
				"weighoverex",
				"weight_overlap_exc"
			],
			[
				"weighover",
				"weight_overlap_inh"
			],
			[
				"weigh",
				"weight_overlap"
			],
			[
				"weight",
				"weight_overlap_inh"
			],
			[
				"weiho",
				"weight_overlap_inh"
			],
			[
				"sigmaexc",
				"sigma_exc_y"
			],
			[
				"centers",
				"centers_y"
			],
			[
				"init_weig",
				"init_weight_exc"
			],
			[
				"sigminh",
				"sigma_inh_y"
			],
			[
				"sigman",
				"sigma_inh"
			],
			[
				"outof",
				"out_of_bounds_horizontal"
			],
			[
				"index",
				"index_y"
			],
			[
				"number_of",
				"number_of_different_colors"
			],
			[
				"sig",
				"sigma_exc"
			],
			[
				"x",
				"xdistances"
			],
			[
				"fact",
				"factor_GABA"
			],
			[
				"dista",
				"distance_between_neurons"
			],
			[
				"position",
				"positions_grid"
			],
			[
				"seta",
				"set_aspect"
			],
			[
				"condi",
				"condition1"
			],
			[
				"velo",
				"velocity_dt"
			],
			[
				"upda",
				"update_inh_weights  (function)"
			],
			[
				"initi",
				"initial_squared_weight_sum"
			],
			[
				"input",
				"input_space_resolution"
			],
			[
				"plotmean",
				"plot_mean_inter_peak_distance"
			],
			[
				"distanc",
				"distances_between_peaks"
			],
			[
				"distan",
				"distances_between_peaks"
			],
			[
				"maxima",
				"maxima_boolean"
			],
			[
				"output",
				"output_rates"
			],
			[
				"simulation",
				"simulation_time"
			],
			[
				"boundar",
				"boundary_conditions"
			],
			[
				"plot_oup",
				"plot_output_rates_from_equation"
			],
			[
				"func",
				"function_kwargs"
			],
			[
				"box",
				"boxlength"
			]
		]
	},
	"buffers":
	[
		{
			"file": "experiment_using_snep.py",
			"settings":
			{
				"buffer_size": 18588,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Working copy: /Users/simonweber/programming/workspace\nCommand: svn diff -r 685 learning_grids/experiment_using_snep.py\n================================================================================\n\nIndex: learning_grids/experiment_using_snep.py\n===================================================================\n--- learning_grids/experiment_using_snep.py	(revision 685)\n+++ learning_grids/experiment_using_snep.py	(working copy)\n@@ -17,7 +17,7 @@\n import functools\n # from memory_profiler import profile\n \n-# import cProfile    \n+# import cProfile\n # import pstats\n # import tables\n \n@@ -28,17 +28,20 @@\n # config['multiproc'] = False\n config['network_type'] = 'empty'\n \n-def get_fixed_point_initial_weights(dimensions, radius, weight_overlap_exc,\n-		weight_overlap_inh,\n-		target_rate, init_weight_exc, n_exc, n_inh, \n-		sigma_exc=None, sigma_inh=None, von_mises=False):\n+\n+def get_fixed_point_initial_weights(dimensions, radius, center_overlap_exc,\n+		center_overlap_inh,\n+		target_rate, init_weight_exc, n_exc, n_inh,\n+		sigma_exc=None, sigma_inh=None, von_mises=False,\n+		fields_per_synapse_exc=1,\n+		fields_per_synapse_inh=1):\n 	\"\"\"Initial inhibitory weights chosen s.t. firing rate = target rate\n \n-	From the analytics we know which combination of initial excitatory \n-	and inhibitory weights leads to an overall output rate of the \n+	From the analytics we know which combination of initial excitatory\n+	and inhibitory weights leads to an overall output rate of the\n 	target rate.\n 	Note: it is crucial to link the corresponding parameters\n-	\n+\n 	Parameters\n 	----------\n 	dimensions : int\n@@ -54,18 +57,24 @@\n 		Values for the initial inhibitory weights\n 	\"\"\"\n \n-	limit_exc = radius + weight_overlap_exc\n-	limit_inh = radius + weight_overlap_inh\n+	limit_exc = radius + center_overlap_exc\n+	limit_inh = radius + center_overlap_inh\n+\n+	# Change n such that it accounts for multiple fields per synapse\n+	n_exc *= fields_per_synapse_exc\n+	n_inh *= fields_per_synapse_inh\n 	if dimensions == 1:\n-		init_weight_inh = ( (n_exc * init_weight_exc  * sigma_exc[:,0] / limit_exc[:,0]\n+		init_weight_inh = ( (n_exc * init_weight_exc \n+								* sigma_exc[:,0]/ limit_exc[:,0]\n 						- target_rate*np.sqrt(2/np.pi))\n-						/ (n_inh * sigma_inh[:,0] / limit_inh[:,0]) )\n+						/ ( n_inh * sigma_inh[:,0]\n+							/ limit_inh[:,0]) )\n \n 	elif dimensions == 2:\n 		if not von_mises:\n 			init_weight_inh = (\n 						(n_exc * init_weight_exc * sigma_exc[:,0] * sigma_exc[:,1]\n-							/ (limit_exc[:,0]*limit_exc[:,1]) \n+							/ (limit_exc[:,0]*limit_exc[:,1])\n 							- 2 * target_rate / np.pi)\n 							/ (n_inh * sigma_inh[:,0] * sigma_inh[:,1]\n 							/ (limit_inh[:,0]*limit_inh[:,1]))\n@@ -80,10 +89,20 @@\n 						/ (n_inh * sigma_inh[:,0] * sps.iv(0, scaled_kappa_inh)\n 							/ (limit_inh[:,0] * np.exp(scaled_kappa_inh)))\n 							)\n+	elif dimensions == 3:\n+		scaled_kappa_exc = (limit_exc[:,2] / (np.pi*sigma_exc[:,2]))**2\n+		scaled_kappa_inh = (limit_inh[:,2] / (np.pi*sigma_inh[:,2]))**2\n+		init_weight_inh = (\n+			(n_exc * init_weight_exc * sigma_exc[:,0] * sigma_exc[:,1] * sps.iv(0, scaled_kappa_exc)\n+				/ (limit_exc[:,0] * limit_exc[:,1] * np.exp(scaled_kappa_exc))\n+				- 2 * target_rate / np.pi)\n+			/ (n_inh * sigma_inh[:,0] * sigma_inh[:,1] * sps.iv(0, scaled_kappa_inh)\n+				/ (limit_inh[:,0] * limit_inh[:,1] * np.exp(scaled_kappa_inh)))\n+			)\n 	return init_weight_inh\n \n \n-simulation_time = 2e7\n+simulation_time = 80e4\n def main():\n 	from snep.utils import Parameter, ParameterArray, ParametersNamed, flatten_params_to_point\n 	from snep.experiment import Experiment\n@@ -91,84 +110,109 @@\n \n 	dimensions = 2\n 	von_mises = False\n+	fields_per_synapse = 1\n+	fields_per_synapse_exc = fields_per_synapse\n+	fields_per_synapse_inh = fields_per_synapse\n+\n+\n 	if von_mises:\n+		# number_per_dimension = np.array([70, 20, 7])[:dimensions]\n+		number_per_dimension = np.array([60, 60, 20])[:dimensions]\n+		boxtype = ['linear']\n 		motion = 'persistent_semiperiodic'\n 	else:\n+		number_per_dimension = np.array([70, 70, 4])[:dimensions]\n+		# boxtype = ['linear', 'circular']\n+		boxtype = ['linear']\n 		motion = 'persistent'\n+	boxtype.sort(key=len, reverse=True)\n+\n+	# number_per_dimension_exc=number_per_dimension_inh=number_per_dimension\n+	number_per_dimension_exc = number_per_dimension\n+	number_per_dimension_inh = number_per_dimension\n+	# n = np.prod(number_per_dimension)\n+	n_exc, n_inh = np.prod(number_per_dimension_exc), np.prod(number_per_dimension_inh)\n+\n 	target_rate = 1.0\n 	# n_exc = 1000\n 	# n_inh = 1000\n 	# radius = np.array([0.5, 1.0, 2.0, 3.0, 4.0])\n-	radius = 0.5\n-	eta_inh = 3e-4 / (2*radius)\n-	eta_exc = 3e-5 / (2*radius)\n+	radius = 1.0\n+	eta_inh = 1e-5 / (2*radius)\n+	eta_exc = 1e-6 / (2*radius)\n 	# simulation_time = 8*radius*radius*10**5\n 	# We want 100 fields on length 1\n 	# length = 2*radius + 2*overlap\n 	# n = 100 * (2*radius + 2*overlap)\n \n 	sigma_exc = np.array([\n-						[0.025, 0.025],\n-						[0.030, 0.030],\n-						[0.035, 0.035],\n-						[0.040, 0.040],\n-						[0.045, 0.045],\n-						[0.050, 0.050],\n-						# [0.05, 0.07],\n-						# [0.06, 0.05],\n-						# [0.07, 0.05],\n+						# [0.15, 0.1],\n+						# [0.4, 0.4],\n+						# [0.1, 0.1, 0.2],\n+						# [0.05, 0.05],\n+						[0.05, 0.05],\n+						# [0.03],	\n+						# [0.04],	\n+						# [0.05],						\n+\n+						# [0.065, 0.065, 0.2],\n+						# [0.070, 0.070, 0.2],\n+						# [0.15, 0.15, 0.2],\n 						])\n \n 	sigma_inh = np.array([\n-						[0.10, 0.10],\n-						[0.10, 0.10],\n-						[0.10, 0.10],\n-						[0.10, 0.10],\n-						[0.10, 0.10],\n-						[0.10, 0.10],\n-						# [0.15, 1.5],\n-						# [0.15, 1.5],\n-						# [0.15, 1.5],\n-						# [0.15, 1.5],\n+						[0.1, 0.1],\n+						# [0.10],\n+						# [0.12],						\n+						# [0.15],						\n+						# [0.12, 0.12, 1.5],\n+						# [0.12, 0.12, 1.5],\n 						])\n \n-	# We don't want weight overlap in y direction if this direction is\n-	# periodic\n+	# sinh = np.arange(0.08, 0.4, 0.02)\n+	# sexc = np.tile(0.03, len(sinh))\n+	# sigma_inh = np.atleast_2d(sinh).T.copy()\n+	# sigma_exc = np.atleast_2d(sexc).T.copy()\n+\n+\n+	# print sigma_inh.shape\n+	# sigma_inh = np.arange(0.08, 0.4, 0.02)\n+\n+	center_overlap_exc = 3 * sigma_exc\n+	center_overlap_inh = 3 * sigma_inh\n 	if von_mises:\n-		weight_overlap_exc = np.array([3., 0.]) * sigma_exc\n-		weight_overlap_inh = np.array([3., 0.]) * sigma_inh\n-	else:\n-		weight_overlap_exc = 3 * sigma_exc\n-		weight_overlap_inh = 3 * sigma_inh\n+		# No center overlap for periodic dimension!\n+		center_overlap_exc[:, -1] = 0.\n+		center_overlap_inh[:, -1] = 0.\n \n+	input_space_resolution = sigma_exc/10.\n+\n 	def get_ParametersNamed(a):\n 		l = []\n 		for x in a:\n 			l.append((str(x).replace(' ', '_'), ParameterArray(x)))\n 		return ParametersNamed(l)\n \n-	n = 5000\n-	n_exc, n_inh = n, n\n \n 	init_weight_exc = 1.0\n 	# init_weight_inh = get_fixed_point_initial_weights(\n-	# 	dimensions, radius, weight_overlap, target_rate, init_weight_exc,\n+	# 	dimensions, radius, center_overlap, target_rate, init_weight_exc,\n 	# 	sigma_exc, sigma_inh, n_exc, n_inh)\n 	init_weight_inh = get_fixed_point_initial_weights(\n-		dimensions=dimensions, radius=radius, \n-		weight_overlap_exc=weight_overlap_exc,\n-		weight_overlap_inh=weight_overlap_inh,\n+		dimensions=dimensions, radius=radius,\n+		center_overlap_exc=center_overlap_exc,\n+		center_overlap_inh=center_overlap_inh,\n 		sigma_exc=sigma_exc, sigma_inh=sigma_inh,\n 		target_rate=target_rate, init_weight_exc=init_weight_exc,\n-		n_exc=n_exc, n_inh=n_inh, von_mises=von_mises)\n+		n_exc=n_exc, n_inh=n_inh, von_mises=von_mises,\n+		fields_per_synapse_exc=fields_per_synapse_exc,\n+		fields_per_synapse_inh=fields_per_synapse_inh)\n \n 	# init_weight_inh = np.zeros_like(init_weight_inh)\n 	# For string arrays you need the list to start with the longest string\n 	# you can automatically achieve this using .sort(key=len, reverse=True)\n 	# motion = ['persistent', 'diffusive']\n 	# motion.sort(key=len, reverse=True)\n-	boxtype = ['linear', 'circular']\n-	boxtype.sort(key=len, reverse=True)\n 	# init_weight_noise = [0, 0.05, 0.1, 0.5, 0.99999]\n    # Note: Maybe you don't need to use Parameter() if you don't have units\n 	param_ranges = {\n@@ -177,48 +221,48 @@\n 			# 'sigma_noise':ParameterArray([0.1]),\n 			# 'number_desired':ParameterArray(n),\n 			# 'fields_per_synapse':ParameterArray([1, 4, 8]),\n-			# 'weight_overlap':ParameterArray(weight_overlap),\n+			# 'center_overlap':ParameterArray(center_overlap),\n 			# 'sigma_x':ParameterArray([0.05, 0.1, 0.2]),\n 			# 'sigma_y':ParameterArray([0.05]),\n 			# 'eta':ParameterArray([1e-6, 1e-5]),\n 			# 'sigma_x':ParameterArray(sigma_exc_x),\n 			# 'sigma_y':ParameterArray(sigma_exc_y),\n 			'sigma':get_ParametersNamed(sigma_exc),\n-			'weight_overlap':get_ParametersNamed(weight_overlap_exc),\n-			# 'weight_overlap_x':ParameterArray(weight_overlap_exc_x),\n-			# 'weight_overlap_y':ParameterArray(weight_overlap_exc_y),\n+			'center_overlap':get_ParametersNamed(center_overlap_exc),\n+			# 'center_overlap_x':ParameterArray(center_overlap_exc_x),\n+			# 'center_overlap_y':ParameterArray(center_overlap_exc_y),\n 			# 'sigma_spreading':ParameterArray([1e-4, 1e-3, 1e-2, 1e-1]),\n 			# 'init_weight':ParameterArray(init_weight_exc),\n 			# 'init_weight_spreading':ParameterArray(init_weight_exc/1.5),\n 			},\n-		'inh': \n+		'inh':\n 			{\n 			# 'sigma_x':ParameterArray(sigma_inh_x),\n 			# 'sigma_y':ParameterArray(sigma_inh_y),\n 			'sigma':get_ParametersNamed(sigma_inh),\n 			# 'eta':ParameterArray([1e-2, 1e-3]),\n 			'init_weight':ParameterArray(init_weight_inh),\n-			# 'weight_overlap_x':ParameterArray(weight_overlap_inh_x),\n-			# 'weight_overlap_y':ParameterArray(weight_overlap_inh_y),\n-			# 'weight_overlap':ParametersNamed(\n+			# 'center_overlap_x':ParameterArray(center_overlap_inh_x),\n+			# 'center_overlap_y':ParameterArray(center_overlap_inh_y),\n+			# 'center_overlap':ParametersNamed(\n 			# 								[\n-			# 								(str(weight_overlap_inh), ParameterArray(weight_overlap_inh)),\n+			# 								(str(center_overlap_inh), ParameterArray(center_overlap_inh)),\n 			# 								# ('y', ParameterArray(np.array([1, 2])))\n 			# 								]\n 			# 								),\n-			'weight_overlap':get_ParametersNamed(weight_overlap_inh),\n+			'center_overlap':get_ParametersNamed(center_overlap_inh),\n 			# 'number_desired':ParameterArray(n),\n 			# 'fields_per_synapse':ParameterArray([1, 4, 8]),\n-			# 'weight_overlap':ParameterArray(weight_overlap),\n+			# 'center_overlap':ParameterArray(center_overlap),\n 			# 'sigma_noise':ParameterArray([0.1]),\n 			# 'eta':ParameterArray([1e-5, 1e-4]),\n 			# 'sigma_spreading':ParameterArray([1e-4, 1e-3, 1e-2, 1e-1]),\n 			# 'sigma':ParameterArray(sigma_inh),\n 			# 'init_weight_spreading':ParameterArray(init_weight_inh/init_weight_spreading_norm),\n 			},\n-		'sim': \n+		'sim':\n 			{\n-			'input_space_resolution':ParameterArray(np.amin(sigma_exc, axis=1) / 10.),\n+			'input_space_resolution':get_ParametersNamed(input_space_resolution),\n 			# 'symmetric_centers':ParameterArray([False, True]),\n 			'seed_centers':ParameterArray(np.arange(2)),\n 			# 'radius':ParameterArray(radius),\n@@ -243,16 +287,16 @@\n 			}\n \n 	}\n-	\n+\n 	params = {\n 		'visual': 'figure',\n 		'sim':\n 			{\n-			# If -1, the input rates will be determined for the current position\n-			# in each time step, # Take something smaller than the smallest\n+			'discretize_space': True,\n+			# Take something smaller than the smallest\n 			# Gaussian (by a factor of 10 maybe)\n-			'input_space_resolution': np.amin(sigma_exc, axis=1)[0]/10.,\n-			'spacing': 51,\n+			'input_space_resolution': ParameterArray(np.amin(sigma_exc, axis=1)/10.),\n+			'spacing': 201,\n 			'equilibration_steps': 10000,\n 			'gaussians_with_height_one': True,\n 			'stationary_rat': False,\n@@ -262,7 +306,7 @@\n 			'output_neurons': 1,\n 			'weight_lateral': 0.0,\n 			'tau': 10.,\n-			'symmetric_centers': True,\n+			'symmetric_centers': False,\n 			'dimensions': dimensions,\n 			'boxtype': 'linear',\n 			'radius': radius,\n@@ -276,6 +320,7 @@\n 			'dt': 1.0,\n 			'initial_x': 0.1,\n 			'initial_y': 0.2,\n+			'initial_z': 0.15,\n 			# 'velocity': 3e-4,\n 			'velocity': 1e-2,\n 			'persistence_length': radius,\n@@ -289,30 +334,35 @@\n 			},\n 		'exc':\n 			{\n-			'distortion': np.sqrt(radius**2 * np.pi/ n_inh),\n+			'number_per_dimension': ParameterArray(number_per_dimension_exc),\n+			'number_desired': n_exc,\n+			# 'distortion': np.sqrt(radius**2 * np.pi/ n_inh),\n+			'distortion':ParameterArray(radius/number_per_dimension_exc),\n 			# 'distortion': 0.0,\n-			# 'weight_overlap_x':ParameterArray(weight_overlap_exc_x),\n-			# 'weight_overlap_y':ParameterArray(weight_overlap_exc_y),\n-			'weight_overlap':ParameterArray(weight_overlap_exc),\n+			# 'center_overlap_x':ParameterArray(center_overlap_exc_x),\n+			# 'center_overlap_y':ParameterArray(center_overlap_exc_y),\n+			'center_overlap':ParameterArray(center_overlap_exc),\n 			'eta': eta_exc,\n 			'sigma': sigma_exc[0,0],\n 			'sigma_spreading': 0.0,\n 			'sigma_distribution': 'uniform',\n 			# 'sigma_x': 0.05,\n 			# 'sigma_y': 0.05,\n-			'number_desired': n_exc,\n-			'fields_per_synapse': 1,\n+			'fields_per_synapse': fields_per_synapse,\n 			'init_weight':init_weight_exc,\n-			'init_weight_spreading': 0.05,\n+			'init_weight_spreading': 5e-2,\n 			'init_weight_distribution': 'uniform',\n 			},\n 		'inh':\n 			{\n-			'distortion': np.sqrt(radius**2 * np.pi/ n_inh),\n+			'number_per_dimension': ParameterArray(number_per_dimension_inh),\n+			'number_desired': n_inh,\n+			# 'distortion': np.sqrt(radius**2 * np.pi/ n_inh),\n+			'distortion':ParameterArray(radius/number_per_dimension_inh),\n 			# 'distortion': 0.0,\n-			# 'weight_overlap_x':ParameterArray(weight_overlap_inh_x),\n-			# 'weight_overlap_y':ParameterArray(weight_overlap_inh_y),\n-			'weight_overlap':ParameterArray(weight_overlap_inh),\n+			# 'center_overlap_x':ParameterArray(center_overlap_inh_x),\n+			# 'center_overlap_y':ParameterArray(center_overlap_inh_y),\n+			'center_overlap':ParameterArray(center_overlap_inh),\n 			'eta': eta_inh,\n 			'sigma': sigma_inh[0,0],\n 			# 'sigma_spreading': {'stdev': 0.01, 'left': 0.01, 'right': 0.199},\n@@ -320,18 +370,21 @@\n 			'sigma_distribution': 'uniform',\n 			# 'sigma_x': 0.1,\n 			# 'sigma_y': 0.1,\n-			'number_desired': n_inh,\n-			'fields_per_synapse': 1,\n+			'fields_per_synapse': fields_per_synapse,\n 			'init_weight': 0.56,\n-			'init_weight_spreading': 0.05,\n+			'init_weight_spreading': 5e-2,\n 			'init_weight_distribution': 'uniform',\n 			}\n 	}\n \n+	# Decide which parameters should be part of the directory name\n+	# For parameters that depend on each other it makes sense to only\n+	# take the primary one\n 	listed = [('exc','sigma'), ('inh','sigma'), ('sim','boxtype'),\n-				('sim', 'seed_centers')]\n-	unlisted = [('exc','weight_overlap'), ('inh','weight_overlap'),\n-				('inh','init_weight'), ('sim', 'input_space_resolution')]\n+				('sim', 'seed_centers'), ('sim', 'initial_x')]\n+	unlisted = [('exc','center_overlap'), ('inh','center_overlap'),\n+				('inh','init_weight'), ('sim', 'input_space_resolution'),\n+				('sim', 'symmetric_centers')]\n \n 	results_map = {p:i for i,p in enumerate([l for l in listed if l in flatten_params_to_point(param_ranges)])}\n 	print results_map\n@@ -352,10 +405,10 @@\n 		('inh', 'sigma'),\n 		# ('inh', 'sigma_y'),\n 		('inh', 'init_weight'),\n-		('exc', 'weight_overlap'),\n-		# ('exc', 'weight_overlap_y'),\n-		('inh', 'weight_overlap'),\n-		# ('inh', 'weight_overlap_y'),\n+		('exc', 'center_overlap'),\n+		# ('exc', 'center_overlap_y'),\n+		('inh', 'center_overlap'),\n+		# ('inh', 'center_overlap_y'),\n 		('exc', 'sigma'),\n 		# ('exc', 'sigma_y'),\n 		('sim', 'input_space_resolution'),\n@@ -367,10 +420,10 @@\n 	# 	('inh', 'fields_per_synapse')]\n 	# tables.link_parameter_ranges(linked_params_tuples)\n \n-	# memory_usage = \n-	# print \"Estimated memory usage by synaptic weights alone: \" \n+	# memory_usage =\n+	# print \"Estimated memory usage by synaptic weights alone: \"\n 	exp.process()\n-	\n+\n 	# Working on a table after it has been stored to disk\n 	# Note: here snep still knows which table you're working on\n 	# if that weren't the case you use make_tables_from_path(path) (in utils.py)\n@@ -383,7 +436,7 @@\n 	#     # raw1 = tables.get_raw_data(psp,'something/simonsucks')\n 	#     # com = tables.get_computed(psp)\n 	#     # Note: a psp is a dictionary like in params (I think)\n-	#     # You can specify a path (here 'exc_sigmas') if you just want this \n+	#     # You can specify a path (here 'exc_sigmas') if you just want this\n 	#     # specific part of it\n 	#     raw0 = tables.get_raw_data(psp, 'exc_sigmas')\n 	# print raw0\n@@ -397,7 +450,7 @@\n # def run(params, all_network_objects, monitor_objs):\n #     rawdata = {'raw_data':{'something':{'simonsucks':np.arange(50),\n #                                         'owenrules':np.arange(5)\n-#                                         }}, \n+#                                         }},\n #                'computed':{'poop':np.arange(20.)}}\n #     return rawdata\n \n@@ -413,7 +466,7 @@\n 	# 	if isinstance(params[d], dict):\n 	# 		for k in params[d]:\n 	# 			my_params[k] = params[d][k]\n-	\n+\n 	# rat = initialization.Rat(my_params)\n 	rat = initialization.Rat(params)\n 	my_rawdata = rat.run()\n@@ -427,7 +480,7 @@\n def postproc(params, rawdata):\n 	file_name = os.path.basename(params['subprocdir'])\n 	save_dir = os.path.join(os.path.dirname(params['subprocdir']), 'visuals')\n-	\n+\n 	if params['visual'] == 'figure':\n 		file_type = '.pdf'\n 		file_full = file_name + file_type\n@@ -451,7 +504,7 @@\n 				('plot_output_rates_from_equation', {'time': simulation_time, 'from_file': True}),\n 				# ('plot_output_rates_from_equation',\n 				# 	{'time': 0, 'spacing': 601, 'from_file': False}),\n-				# ('output_rate_heat_map', {'from_file': True, 'end_time': -1})\n+				# ('output_rate_heat_map', {'from_file': True, 'end_time': simulation_time})\n 			]\n 		plot_list = [functools.partial(getattr(plot_class, f), **kwargs) for f, kwargs in function_kwargs]\n 		plotting.plot_list(fig, plot_list)\n@@ -488,6 +541,6 @@\n 	return rawdata\n \n if __name__ == '__main__':\n-	# cProfile.run('main()', 'profile2')\n-	# pstats.Stats('profile').sort_stats('cumulative').print_stats(20)\n+	# cProfile.run('main()', 'profile_same_4th')\n+	# pstats.Stats('profile_off').sort_stats('cumulative').print_stats(20)\n 	tables = main()",
			"settings":
			{
				"buffer_size": 18116,
				"line_ending": "Unix",
				"name": "SVN Diff (685:WORKING learning_grids/experiment_using_snep.py)",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "plot.py",
			"settings":
			{
				"buffer_size": 9893,
				"line_ending": "Unix"
			}
		},
		{
			"file": "plotting.py",
			"settings":
			{
				"buffer_size": 44905,
				"line_ending": "Unix"
			}
		},
		{
			"file": "figures/__init__.py",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "initialization.py",
			"settings":
			{
				"buffer_size": 42437,
				"line_ending": "Unix"
			}
		},
		{
			"file": "observables.py",
			"settings":
			{
				"buffer_size": 8985,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 87.0,
		"selected_items":
		[
			[
				"svn file com",
				"SVN: (File) Commit"
			],
			[
				"svn fold",
				"SVN: (Folder) Commit"
			],
			[
				"svn file diff",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn file log",
				"SVN: (File) Log"
			],
			[
				"svn file di",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn file dif",
				"SVN: (File) Diff, Remote"
			],
			[
				"svn folder ",
				"SVN: (Folder) Commit"
			],
			[
				"svn file co",
				"SVN: (File) Commit"
			],
			[
				"svn file c",
				"SVN: (File) Commit"
			],
			[
				"svn folder co",
				"SVN: (Folder) Commit"
			],
			[
				"svn file a",
				"SVN: (File) Add"
			],
			[
				"svn add",
				"SVN: Add, Interactive…"
			],
			[
				"svn file og",
				"SVN: (File) Log"
			],
			[
				"svn folder com",
				"SVN: (Folder) Commit"
			],
			[
				"svn folde c",
				"SVN: (Folder) Commit"
			],
			[
				"svn com",
				"SVN: (Folder) Commit"
			],
			[
				"svn folder",
				"SVN: (Folder) Commit"
			],
			[
				"svn file add",
				"SVN: (File) Add"
			],
			[
				"svn file comm",
				"SVN: (File) Commit"
			],
			[
				"svn folder c",
				"SVN: (Folder) Commit"
			],
			[
				"svn folder comm",
				"SVN: (Folder) Commit"
			],
			[
				"svn folde co",
				"SVN: (Folder) Commit"
			],
			[
				"svn folder di",
				"SVN: (Folder) Diff"
			],
			[
				"svn folder diff",
				"SVN: (Folder) Diff"
			],
			[
				"svn fol",
				"SVN: (Folder) Commit"
			],
			[
				"svn fileco",
				"SVN: (File) Commit"
			],
			[
				"svn file ad",
				"SVN: (File) Add"
			],
			[
				"SVN FILE COM",
				"SVN: (File) Commit"
			],
			[
				"svn file",
				"SVN: (File) Add"
			],
			[
				"svn filea",
				"SVN: (File) Add"
			],
			[
				"svn dele",
				"SVN: Delete, Interactive…"
			],
			[
				"svn file d",
				"SVN: (File) Delete"
			],
			[
				"svn move",
				"SVN: (File) Move…"
			],
			[
				"svn ov",
				"SVN: (File) Move…"
			],
			[
				"svn folder lo",
				"SVN: (Folder) Log"
			],
			[
				"svn file lo",
				"SVN: (File) Log"
			],
			[
				"svn fid",
				"SVN: (File) Diff"
			],
			[
				"svn  fole",
				"SVN: (Folder) Commit"
			],
			[
				"svn co",
				"SVN: (File) Commit"
			],
			[
				"svn comm",
				"SVN: (File) Commit"
			],
			[
				"svn folde",
				"SVN: (Folder) Commit"
			],
			[
				"svn folder dif",
				"SVN: (Folder) Diff"
			],
			[
				"svn file update",
				"SVN: (File) Update"
			],
			[
				"svn diff",
				"SVN: (File) Diff"
			],
			[
				"svn fo",
				"SVN: (Folder) Commit"
			],
			[
				"svn filecom",
				"SVN: (File) Commit"
			],
			[
				"svn file diff cus",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn file diff ",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn diff cus",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn file diff s",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn folecom",
				"SVN: (Folder) Commit"
			],
			[
				"svn file diff	",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn fole co",
				"SVN: (Folder) Commit"
			],
			[
				"svn file diff cu",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn file difcu",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn fiecom",
				"SVN: (File) Commit"
			],
			[
				"s",
				"SublimeREPL: Octave"
			],
			[
				"packaconin",
				"Package Control: Install Package"
			],
			[
				"sublimelinter",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"svn foldco",
				"SVN: (Folder) Commit"
			],
			[
				"svn diff cu",
				"SVN: (Folder) Diff, Custom Revisions…"
			],
			[
				"svn folder log",
				"SVN: (Folder) Log"
			],
			[
				"svn log",
				"SVN: (File) Log"
			],
			[
				"svn file ",
				"SVN: (File) Log"
			],
			[
				"svn dif",
				"SVN: (File) Diff"
			],
			[
				"svn fil",
				"SVN: (File) Commit"
			],
			[
				"svn file df",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"lint",
				"SublimeLinter: Show Error List"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"svn foleco",
				"SVN: (Folder) Commit"
			],
			[
				"svn fie di",
				"SVN: (File) Diff"
			],
			[
				"svn file diff c",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn fodco",
				"SVN: (Folder) Commit"
			],
			[
				"svn df",
				"SVN: (File) Diff"
			],
			[
				"svn fildiff",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn foldde",
				"SVN: (Folder) Diff, Custom Revisions…"
			],
			[
				"svn c",
				"SVN: (Folder) Commit"
			],
			[
				"svncom",
				"SVN: (Folder) Commit"
			],
			[
				"svn file diff,",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn fodf",
				"SVN: (Folder) Diff"
			],
			[
				"svn stat",
				"SVN: (Folder) Status"
			],
			[
				"svn checkout",
				"SVN: Checkout…"
			],
			[
				"svn diff cust",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn custom",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn reviso",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svncomm",
				"SVN: (Folder) Commit"
			],
			[
				"svn commit",
				"SVN: Commit…"
			],
			[
				"svn status",
				"SVN: Status"
			],
			[
				"folder com",
				"SVN: (Folder) Commit"
			],
			[
				"svn fil diff",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn fildif",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn fold com",
				"SVN: (Folder) Commit"
			],
			[
				"svn fold comm",
				"SVN: (Folder) Commit"
			],
			[
				"svn folcomm",
				"SVN: (Folder) Commit"
			],
			[
				"svn fild",
				"SVN: (File) Diff"
			],
			[
				"svn fodcomm",
				"SVN: (Folder) Commit"
			],
			[
				"svn update",
				"SVN: (Folder) Update"
			],
			[
				"svn filde",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn sta",
				"SVN: (Folder) Status"
			],
			[
				"svn dff",
				"SVN: (Folder) Diff, Custom Revisions…"
			],
			[
				"svn stats",
				"SVN: Status"
			],
			[
				"svn fo diff",
				"SVN: (Folder) Diff, Custom Revisions…"
			],
			[
				"svn focomm",
				"SVN: (Folder) Commit"
			],
			[
				"svn fil com",
				"SVN: (File) Commit"
			],
			[
				"svn diff ",
				"SVN: (Folder) Diff, Custom Revisions…"
			],
			[
				"svn statu",
				"SVN: (Folder) Status"
			],
			[
				"svn folcom",
				"SVN: (Folder) Commit"
			],
			[
				"svn",
				"SVN: Commit…"
			],
			[
				"svn foldc",
				"SVN: (Folder) Commit"
			],
			[
				"svn diff re",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn diff rev",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn diff r",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn diff revi",
				"SVN: (File) Diff, Custom Revisions…"
			],
			[
				"svn ",
				"SVN: Commit…"
			],
			[
				"svn comm	",
				"SVN: (Folder) Commit"
			],
			[
				"stat",
				"SVN: Status"
			],
			[
				"svn upda",
				"SVN: (File) Update"
			],
			[
				"svn filc",
				"SVN: (File) Commit"
			],
			[
				"svn stt",
				"SVN: (Folder) Status"
			],
			[
				"replrun",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"repl ru",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"repl run",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"repl",
				"SublimeREPL: Python"
			],
			[
				"folder stat",
				"SVN: (Folder) Status"
			],
			[
				"svn di",
				"SVN: Diff"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			]
		],
		"width": 602.0
	},
	"console":
	{
		"height": 260.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410863558/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410863474/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/plot.py",
		"/Users/simonweber/programming/workspace/learning_grids/experiment_using_snep.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410774524/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/figures/two_dim_input_tuning.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410774282/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410538669/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410538655/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410538386/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410538364/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410538352/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410538260/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410440264/SVN",
		"/Users/simonweber/Library/Application Support/Sublime Text 2/Packages/User/SVN.errors.log",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410448871/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410448810/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410448754/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410445448/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410445401/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410440638/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410440602/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410440494/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410440302/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410440074/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410431796/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1410349150/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/figures/head_direction_input.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures/Head_direaction_cell.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures/plasticity_mechanism.py",
		"/Users/simonweber/programming/workspace/learning_grids/initialization.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures/3dim_test.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures/1d_center_surround.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures/2dim_input_tuning.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408986997/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408986987/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/play.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408739416/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408722435/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408712158/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408710775/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408700512/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408700041/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408699958/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408699813/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408612664/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408612427/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408553564/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408553557/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408553544/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408459976/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408459920/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408459501/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/plotting.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1408367455/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/figures/3dim_input_tuning.py",
		"/Users/simonweber/programming/workspace/learning_grids/observables.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407485224/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407484552/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407438620/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407436877/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407407347/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407336054/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407336019/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407336005/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407334317/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/analytics/linear_stability_analysis.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407230779/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407229260/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407229148/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407229065/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407228869/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407226959/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407226924/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407186356/SVN",
		"/Users/simonweber/Desktop/tmp_old_revision/learning_grids/experiment_using_snep.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407184928/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407171647/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407171575/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/figures/2dim_cell_types.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures/input_tuning.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407147715/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1407143387/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406890301/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406890290/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406822030/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406821969/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406815377/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406794937/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406794922/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406794901/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/figures/figures.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures/__init__.py",
		"/Users/simonweber/programming/workspace/learning_grids/analytics/imports.py",
		"/Users/simonweber/programming/workspace/general_utils/snep_plotting.py",
		"/Users/simonweber/programming/workspace/learning_grids/snep/tables/paramspace.py",
		"/Users/simonweber/programming/workspace/learning_grids/figures.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406793240/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406741233/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406727772/SVN",
		"/Users/simonweber/programming/workspace/learning_grids/snep/tables/network/network_base.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406714046/SVN",
		"/Users/simonweber/tex_and_unix/TeX/Vorlagen/Vollmacht/Brief/Briefvorlage.tex",
		"/Users/simonweber/master_thesis/svn/my_depletion_forces_in_active_matter/my_draft_phase_segregation_different_activity/Phasesegregation_based_on_different_activity.tex",
		"/Users/simonweber/Downloads/integral_demo.py",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406134163/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406118823/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406115851/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406115845/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406115617/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406115323/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406115278/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406115160/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406115091/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406114565/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406049364/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406037686/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406037469/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406029625/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1406028093/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405938574/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405934022/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405891713/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405611101/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405610565/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405609386/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405606151/SVN",
		"/var/folders/st/wch4q6455rvgt1tzlt6b4h9h0000gn/T/sublime-svn-1405603394/SVN"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/simonweber/programming/workspace",
			"/Users/simonweber/programming/workspace/learning_grids/, -/Users/simonweber/programming/workspace/learning_grids/snep/*, -/Users/simonweber/programming/workspace/learning_grids/.metadata/*",
			"/Users/simonweber/programming/workspace/learning_grids/, /Users/simonweber/programming/workspace/learning_grids/snep/*, -/Users/simonweber/programming/workspace/learning_grids/.metadata/*",
			"/Users/simonweber/programming/workspace/learning_grids/, -/Users/simonweber/programming/workspace/learning_grids/snep/*, -/Users/simonweber/programming/workspace/learning_grids/.metadata/*",
			"/Users/simonweber/programming/workspace/learning_grids/, -/Users/simonweber/programming/workspace/learning_grids/snep/*",
			"/Users/simonweber/programming/workspace/learning_grids/snep",
			"/Users/simonweber/programming/workspace/learning_grids, -/Users/simonweber/programming/workspace/learning_grids/snep",
			"/Users/simonweber/programming/workspace/",
			"/Users/simonweber/programming/workspace/snep",
			"/Users/simonweber/programming/workspace",
			"/Users/simonweber/programming/workspace/snep",
			"/Users/simonweber/programming/workspace/",
			"/Users/simonweber/programming/workspace/snep/snep_projects/snep/tables",
			"<project>",
			"/Users/simonweber/master_thesis/thesis/TeX/",
			"/Users/simonweber/master_thesis/thesis/TeX/chapters",
			"",
			"/Users/simonweber/master_thesis/thesis/TeX/figures_tex",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"aspect",
			"sigmas",
			"__init__.py",
			"symmetric_centers",
			"really doing",
			"fields_per",
			"hline",
			"field",
			"size=",
			"corr",
			"size",
			"42",
			"head_direction_cell",
			"ytick",
			"von_mises",
			"excitatory",
			"seed",
			"font",
			"18",
			"42",
			"self.discretize_space",
			"self.rates",
			"input_space_resolution",
			"n",
			"really doing",
			"input_space_resolution",
			"number_per_dimension",
			"0.3",
			"polar",
			"size",
			"figsize",
			"fig_size",
			"size",
			"print",
			"input_rates",
			"radius",
			"positions_grid",
			"input_space_resolution",
			"input_rates",
			"positions_grid",
			"input_rates",
			"positions_grid",
			"input_rates",
			"positions_grid",
			"get_equi",
			"positions_grid",
			".T",
			"positions_grid",
			"n_x",
			"self.centers",
			"self.",
			"positions_grid",
			"location",
			"positions",
			"rates_grid",
			"output_rate_grid",
			"grid",
			"output_rates_grid",
			"scaled_kappa",
			"distance",
			"off",
			"circular",
			"margin",
			"legend",
			"numpoint",
			"ha",
			"hand",
			"handl",
			"locator",
			"ylabel",
			"plot_mean",
			"n_values",
			"norm",
			"mpl",
			"size",
			"fontsize",
			"sexc",
			"sinh",
			"motion",
			"twoSigm",
			"plot_grid_spacing",
			"locals",
			"varied_parameter",
			"varied_para",
			"n_values",
			"varied_para",
			"grid",
			"subprocdir",
			"fonts",
			"wave",
			"get_ylim",
			"transpa",
			"figsize",
			"population_name",
			"popluation_name",
			"populations",
			"radius",
			"box_linspace",
			"field",
			"fields_per",
			"maximal_rate",
			"gnuplot",
			"xticks",
			"label",
			"ylabel",
			"membrane",
			"size",
			"figsize",
			"fonts",
			"mask",
			"output_rate_grid",
			"output_rates_grid",
			"setting",
			"tigh",
			"frame",
			"inputs",
			"populations",
			"fig",
			"ylabel",
			"fontsize=12",
			"12",
			"tick",
			"ylim",
			"loc",
			"ylim",
			"dotted",
			"dashed",
			"current['inh']"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"position",
			"centers",
			"",
			"center_overlap",
			"",
			"self.input_space_resolution",
			"boxlength",
			"n_inh",
			"n_exc",
			"sigma_exc",
			"sigma_inh",
			"sigma_exc",
			"eta_exc",
			"eta_inh",
			"target_rate",
			"boxlength",
			"n_exc",
			"n_inh",
			"sigma_exc",
			"sigma_inh",
			"eta_exc",
			"eta_inh",
			"a",
			"s2",
			"s1",
			"time2frame",
			"number_desired",
			"n",
			"target_rate",
			"seed_network",
			"seed_trajectory",
			"start_frame",
			"self.params['inh']['sigma']",
			"self.params['exc']['sigma']",
			"self.rawdata['inh']['sigmas']",
			"self.rawdata['exc']['sigmas']",
			"self.rawdata['inh']['centers']",
			"self.rawdata['exc']['centers']",
			"self.rawdata['inh']['weights']",
			"self.rawdata['exc']['weights']",
			"rawdata_table",
			"inh_weights",
			"exc_weights",
			"a_f_tuples",
			"#",
			"",
			"Is",
			"UInt",
			"Float",
			"seed_dirs",
			"clusters_together",
			"clusters_dms",
			"clusters_particles",
			"fileh",
			"maximal_cluster_size_vs_time_20000",
			"i7s03",
			"cha:",
			"strong4",
			"strong3",
			"strong2",
			"strong1",
			"theta",
			"\\\\mathcal{V}",
			"Vri",
			"\\\\mathcal{V}",
			"\\mathcal{V}",
			"\\\\Meq",
			"\\Meq",
			"probability density function",
			"height=5.5",
			"height=5.6",
			"height=5.8",
			"height=5.4",
			"height=5.25",
			"hspace\\{0.1",
			"\\\\emph{intrinsic}",
			"\\emph{intrinsic}",
			"Dtilde=0",
			"Dtilde=10^{-4}",
			"Dtilde=10^{-3}",
			"Dtilde=10^{-2}",
			"Dtilde=10^{-1}",
			"Dtilde=10^0",
			"Dtilde",
			"Ballistic",
			"Diffusive",
			"\\$\\\\rho",
			"Eq.~\\\\eqref",
			"Eq.\\\\eqref",
			"Eq.\\eqref",
			"Dtilde=0.001",
			"Dtilde=0.01",
			"Dtilde=0.1",
			"Dtilde=1.0",
			"",
			"strong",
			"",
			"\n\\definecolor{strong2}{HTML}{0x4DAF4A;}\n\\definecolor{strong3}{HTML}{0x984EA3;}\n\\definecolor{strong4}{HTML}{0xFF7F00;}\n\\definecolor{strong5}{HTML}{0xA65628;}\n\\definecolor{strong6}{HTML}{0xF781BF;}\n\\definecolor{strong7}{HTML}{0x999999;}\n\\definecolor{strong8}{HTML}{0xE41A1C;}",
			"\\definecolor{strong1}{HTML}{0x377EB8;}\n\\definecolor{strong2}{HTML}{0x4DAF4A;}\n\\definecolor{strong3}{HTML}{0x984EA3;}\n\\definecolor{strong4}{HTML}{0xFF7F00;}\n\\definecolor{strong5}{HTML}{0xA65628;}\n\\definecolor{strong6}{HTML}{0xF781BF;}\n\\definecolor{strong7}{HTML}{0x999999;}\n\\definecolor{strong8}{HTML}{0xE41A1C;}",
			"\\definecolor{strong1}{HTML}{0x377EB8;}\n\\definecolor{strong2}{HTML}{0x4DAF4A;}\n\\definecolor{strong3}{HTML}{0x984EA3;}\n\\definecolor{strong4}{HTML}{0xFF7F00;}\n\\definecolor{strong5}{HTML}{0xA65628;}\n\\definecolor{strong6}{HTML}{0xF781BF;}\n\\definecolor{strong7}{HTML}{0x999999;}\n\\definecolor{strong8}{HTML}{0xE41A1C;}\n",
			"}",
			"strong",
			"\\definecolor{qual1}{HTML}{A6CEE3}\n\\definecolor{qual2}{HTML}{1F78B4}\n\\definecolor{qual3}{HTML}{B2DF8A}\n\\definecolor{qual4}{HTML}{33A02C}\n\\definecolor{qual5}{HTML}{FB9A99}\n\\definecolor{qual6}{HTML}{E31A1C}\n\\definecolor{qual7}{HTML}{FDBF6F}",
			"t_sampling",
			"MainFolder",
			"text",
			"\\BoxPlot",
			"MyString",
			"MyDir"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "experiment_using_snep.py",
					"settings":
					{
						"buffer_size": 18588,
						"regions":
						{
						},
						"selection":
						[
							[
								3261,
								3261
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"W191",
								"E126"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1160.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 18116,
						"regions":
						{
						},
						"selection":
						[
							[
								2941,
								2941
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"color_scheme": "Packages/Color Scheme - Default/Monokai.tmTheme",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"W191",
								"E126"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"svn_params":
							[
								"/usr/bin/svn",
								"diff",
								"-r",
								"685",
								"learning_grids/experiment_using_snep.py"
							],
							"svn_wc_dir": "/Users/simonweber/programming/workspace",
							"svn_wc_path": "learning_grids/experiment_using_snep.py",
							"syntax": "Packages/SVN/color/SVN Diff.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 6491.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "plot.py",
					"settings":
					{
						"buffer_size": 9893,
						"regions":
						{
						},
						"selection":
						[
							[
								9260,
								9260
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"W191",
								"E126"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 2.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "plotting.py",
					"settings":
					{
						"buffer_size": 44905,
						"regions":
						{
						},
						"selection":
						[
							[
								39877,
								39877
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"W191",
								"E126"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16403.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "figures/__init__.py",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"W191",
								"E126"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "initialization.py",
					"settings":
					{
						"buffer_size": 42437,
						"regions":
						{
						},
						"selection":
						[
							[
								612,
								612
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"W191",
								"E126"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "observables.py",
					"settings":
					{
						"buffer_size": 8985,
						"regions":
						{
						},
						"selection":
						[
							[
								572,
								572
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"W191",
								"E126"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 179.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"csv",
				"utils/csv_functions.py"
			],
			[
				"",
				"/Users/simonweber/master_thesis/scripts/normalize_pair_correlation.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 240.0,
	"status_bar_visible": true
}
